{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\y\\\\Documents\\\\coworkers\\\\coworker-website\\\\src\\\\pages\\\\BookingConfirmation.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport '../styles/BookingConfirmation.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookingConfirmation = () => {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  // Get booking details from the state passed during navigation\n  const bookingDetails = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.bookingDetails;\n  if (!bookingDetails) {\n    console.error('Booking details are missing. Redirecting...');\n    navigate('/book-tour');\n    return null;\n  }\n  const {\n    firstName,\n    lastName,\n    startDate,\n    time,\n    location: eventLocation,\n    email\n  } = bookingDetails;\n  const fullName = `${firstName} ${lastName}`.trim();\n\n  // Handle email notification submission\n  const handleSubmit = async () => {\n    if (!fullName || !startDate || !time || !eventLocation || !email) {\n      alert('Missing required fields. Please fill in all fields.');\n      return;\n    }\n    const emailData = {\n      name: fullName,\n      date: startDate,\n      time,\n      location: eventLocation,\n      email\n    };\n    try {\n      setIsSubmitting(true);\n      const response = await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:5000'}/send-mail`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(emailData)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error('Backend Error:', errorData);\n        alert(`Failed to send email confirmation: ${errorData.error}`);\n      } else {\n        alert('Email confirmation sent successfully!');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('An error occurred while sending the email.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"confirmation-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Thank you for your booking, see you soon!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"booking-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: eventLocation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: new Date(startDate).toLocaleDateString('en-US', {\n          weekday: 'long',\n          day: 'numeric',\n          month: 'long'\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-button\",\n      onClick: handleSubmit,\n      disabled: isSubmitting,\n      children: isSubmitting ? 'Sending...' : 'Submit'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(BookingConfirmation, \"kTqCzYJ21onHzCd8dqGqnb0pncY=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = BookingConfirmation;\nexport default BookingConfirmation;\nvar _c;\n$RefreshReg$(_c, \"BookingConfirmation\");","map":{"version":3,"names":["React","useState","useLocation","useNavigate","jsxDEV","_jsxDEV","BookingConfirmation","_s","_location$state","location","navigate","isSubmitting","setIsSubmitting","bookingDetails","state","console","error","firstName","lastName","startDate","time","eventLocation","email","fullName","trim","handleSubmit","alert","emailData","name","date","response","fetch","process","env","REACT_APP_API_URL","method","headers","body","JSON","stringify","ok","errorData","json","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Date","toLocaleDateString","weekday","day","month","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/y/Documents/coworkers/coworker-website/src/pages/BookingConfirmation.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport '../styles/BookingConfirmation.css';\r\n\r\nconst BookingConfirmation = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  // Get booking details from the state passed during navigation\r\n  const bookingDetails = location.state?.bookingDetails;\r\n\r\n  if (!bookingDetails) {\r\n    console.error('Booking details are missing. Redirecting...');\r\n    navigate('/book-tour');\r\n    return null;\r\n  }\r\n\r\n  const { firstName, lastName, startDate, time, location: eventLocation, email } = bookingDetails;\r\n  const fullName = `${firstName} ${lastName}`.trim();\r\n\r\n  // Handle email notification submission\r\n  const handleSubmit = async () => {\r\n    if (!fullName || !startDate || !time || !eventLocation || !email) {\r\n      alert('Missing required fields. Please fill in all fields.');\r\n      return;\r\n    }\r\n\r\n    const emailData = {\r\n      name: fullName,\r\n      date: startDate,\r\n      time,\r\n      location: eventLocation,\r\n      email,\r\n    };\r\n\r\n    try {\r\n      setIsSubmitting(true);\r\n      const response = await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:5000'}/send-mail`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(emailData),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        console.error('Backend Error:', errorData);\r\n        alert(`Failed to send email confirmation: ${errorData.error}`);\r\n      } else {\r\n        alert('Email confirmation sent successfully!');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      alert('An error occurred while sending the email.');\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"confirmation-container\">\r\n      <h2>Thank you for your booking, see you soon!</h2>\r\n      <div className=\"booking-details\">\r\n        <h3>{eventLocation}</h3>\r\n        <p>{new Date(startDate).toLocaleDateString('en-US', { weekday: 'long', day: 'numeric', month: 'long' })}</p>\r\n        <p>{time}</p>\r\n      </div>\r\n      <button className=\"submit-button\" onClick={handleSubmit} disabled={isSubmitting}>\r\n        {isSubmitting ? 'Sending...' : 'Submit'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookingConfirmation;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}